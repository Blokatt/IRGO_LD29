<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprDoor</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>sprDoorMask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_index=2;
image_speed=0;
open=choose(0,0,0,0,1,2);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth=room_height-y;
if (point_distance(x+20,y+80,objPlayer.x,objPlayer.y)&lt;50){    
    if (open==0){
        
        if (objPlayer.y&lt;=(y+80)){
            global.interact=1;
            global.lmb="Open";
            if (mouse_check_button_pressed(mb_left)){
                var snd=choose(sndDoor,sndDoor2);
                audio_sound_pitch(snd,random_range(.9,1.1));
                audio_play_sound(snd,0,0);
                open=1;
            }
        }
        if (objPlayer.y&gt;(y+80)){
            global.lmb="Open";
            global.interact=1;
            if (mouse_check_button_pressed(mb_left)){
                var snd=choose(sndDoor,sndDoor2);
                audio_sound_pitch(snd,random_range(.9,1.1));
                audio_play_sound(snd,0,0);        
                open=2;
            }
        }
    }else{
        
        if (objPlayer.y&lt;=(y+80-30) &amp;&amp; image_index&lt;2){
            global.lmb="Close";
            global.interact=1;
            if (mouse_check_button_pressed(mb_left)){
                var snd=choose(sndDoor,sndDoor2);
                audio_sound_pitch(snd,random_range(.9,1.1));
                audio_play_sound(snd,0,0);
                open=0;
            }
        }
        if (objPlayer.y&gt;(y+80+30) &amp;&amp; image_index&gt;2){
            global.interact=1;
            global.lmb="Close";
            if (mouse_check_button_pressed(mb_left)){
                var snd=choose(sndDoor,sndDoor2);
                audio_sound_pitch(snd,random_range(.9,1.1));
                audio_play_sound(snd,0,0);
                open=0;
            }
        }
    }        
}
if (open==1 &amp;&amp; round(image_index)&lt;image_number){
    image_index+=.1;
}
if (open==2 &amp;&amp; round(image_index)&gt;0){
    image_index-=.1;
}
if (open==0 &amp;&amp; round(image_index)&gt;2) then image_index-=.1;
if (open==0 &amp;&amp; round(image_index)&lt;3) then image_index+=.1;

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>80,80</point>
  </PhysicsShapePoints>
</object>
