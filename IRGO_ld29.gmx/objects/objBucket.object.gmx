<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprBucket</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>filled=0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>objPlayer.holding=-1;      
audio_sound_pitch(sndCan,random_range(.8,1.2));
audio_play_sound(sndCan,0,0);    
y=objPlayer.y-sprite_height;
x=objPlayer.x-sprite_width/2;
global.cut[0]=1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_single=filled;
depth=room_height-(y-16)+sprite_height+17;   
if (global.currentObj==3){
    if (point_distance(x,y,objPlayer.x,objPlayer.y)&lt;=50 &amp;&amp; objPlayer.holding!=id) then global.rmb="Pick up";
    if (objPlayer.holding==id) then global.rmb="Put down";
    if (point_distance(objPlayer.x,objPlayer.y,1000,700)&lt;=50 &amp;&amp; objPlayer.holding==id) then global.rmb="Fill up";
    if (point_distance(objPlayer.x,objPlayer.y,320,880)&lt;=80 &amp;&amp; objPlayer.holding==id) then global.rmb="Clean";  
    var putDown=1;  
    if (mouse_check_button_pressed(mb_right) &amp;&amp; global.txtPause==0 &amp;&amp; global.intro==0 &amp;&amp; global.pause==0){
        if (objPlayer.holding==id){       
            if (point_distance(objPlayer.x,objPlayer.y,1000,700)&lt;=50){                
                if (filled==0){
                    var snd=sndWater;                
                    audio_sound_pitch(snd,random_range(.8,1.2));
                    audio_play_sound(snd,0,0);
                }
                filled=1;
                putDown=0;
            }                                 
            if (point_distance(objPlayer.x,objPlayer.y,320,880)&lt;=80){
                putDown=0;
                if (filled==1){
                    alarm[0]=sec(1);
                    global.pause=1;
                }else{
                    textBox("The bucket is empty.","It would be quite a challenge to clean this mess without any water in it.");
                }
            }                     
            if (putDown==1){
                objPlayer.holding=-1;      
                audio_sound_pitch(sndCan,random_range(.8,1.2));
                audio_play_sound(sndCan,0,0);    
                y=objPlayer.y-sprite_height;
                x=objPlayer.x-sprite_width/2;
                exit;
            }
        }else{                
            if (point_distance(x+sprite_width/2,y+sprite_height,objPlayer.x,objPlayer.y)&lt;=50){
                objPlayer.holding=id;
                var snd=sndCan;
                audio_sound_pitch(snd,random_range(.8,1.2));
                audio_play_sound(snd,0,0);                
            }
        }
    }
    if (objPlayer.holding==id){
        depth=objPlayer.depth-1;
        if (x&lt;(objPlayer.x-37+sprite_width/2)) then x+=((objPlayer.x-37+sprite_width/2)-x)/1.5;
        if (x&gt;(objPlayer.x-37+sprite_width/2)) then x-=(x-(objPlayer.x-37+sprite_width/2))/1.5;
        if (y&lt;objPlayer.y-25-sprite_height/2) then y+=((objPlayer.y-25-sprite_height/2)-y)/1.5;
        if (y&gt;objPlayer.y-25-sprite_height/2) then y-=(y-(objPlayer.y-25-sprite_height/2))/1.5;
    }
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>12,12</point>
  </PhysicsShapePoints>
</object>
